<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="PropertyDAO">

	<!-- property 테이블에 대한 SQL 구문 작성 -->
	
	<insert id="openProperty" parameterType="PropertyVO">
		INSERT INTO property (property_user, property_title, property_address, property_content, 
							  property_carousel, property_video, property_category, property_type, 
							  property_city, property_gu, property_price, property_deposit,
							  property_cost, property_size, property_bedroom, property_bathroom, property_option) 
		VALUES (#{property_user}, #{property_title}, #{property_address}, #{property_content}, 
				#{property_carousel}, #{property_video}, #{property_category}, #{property_type}, 
				#{property_city}, #{property_gu}, #{property_price}, #{property_deposit},
				#{property_cost}, #{property_size}, #{property_bedroom}, #{property_bathroom}, #{property_option})
	</insert>
	
	<update id="increasePropertyHits" parameterType="int">
		UPDATE property
		SET property_read_count = property_read_count + 1
		WHERE property_id = #{property_id}
	</update>
	
	<update id="updateLoveCount" parameterType="Map">
		UPDATE property
		SET property_love_count = #{count}
		WHERE property_id = #{property_id}
	</update>
	
	<select id="getProperty" parameterType="int" resultType="com.semobang.property.domain.PropertyVO">
		SELECT *
		FROM property
		WHERE property_id = #{property_id} 
	</select>
	
	<delete id="deleteProperty" parameterType="int">
		DELETE FROM property
		WHERE property_id = #{property_id} 
	</delete>
	
	<update id="updatePropertyByAdmin" parameterType="PropertyVO">
		UPDATE property
		SET property_badge = #{property_badge}, property_status = #{property_status}
		WHERE property_id = #{property_id}
	</update>
	
	<select id="getPropertyListByAdmin" resultType="PropertyVO">
		SELECT *
		FROM property
		ORDER BY property_date DESC
	</select>
	
	<select id="getPropertyList" parameterType="java.util.Map" resultType="PropertyVO">
		SELECT *
		FROM property
		WHERE property_status = 'open'
		ORDER BY #{orderBy}
		LIMIT #{startRow}, #{propertyPerPage}
	</select>
	
	<select id="getPropertyListByBadge" parameterType="java.util.Map" resultType="PropertyVO">
		SELECT *
		FROM property
		WHERE property_badge = #{property_badge}
		AND property_status = 'open'
		ORDER BY property_date DESC
		LIMIT 0, #{showAmount}
	</select>
	
	<select id="getRecommendPropertyList" parameterType="java.util.Map" resultType="PropertyVO">
		SELECT *
		FROM property
		WHERE property_status = 'open'
		<if test="login == true">
		<choose>
			<when test="property_category != null and property_category != ''">
				AND property_category = #{property_category}
			</when>
			<when test="property_type != null and property_type != ''">
				AND property_type = #{property_type}
			</when>
			<when test="property_city != null and property_city != ''">
				AND property_city = #{property_city}
			</when>			
		</choose>	
		</if>		  
		ORDER BY property_love_count DESC, #{orderBy}
		LIMIT #{startRow}, #{propertyPerPage}
	</select>
	
	<select id="getPopularPropertyList" parameterType="java.util.Map" resultType="PropertyVO">
		SELECT *
		FROM property
		WHERE property_status = 'open'
		<if test="login == true">
			<choose>
			<when test="property_category != null and property_category != ''">
				AND property_category = #{property_category}
			</when>
			<when test="property_type != null and property_type != ''">
				AND property_type = #{property_type}
			</when>
			<when test="property_city != null and property_city != ''">
				AND property_city = #{property_city}
			</when>			
		</choose>	
		</if>
		ORDER BY property_read_count DESC, #{orderBy}
		LIMIT #{startRow}, #{propertyPerPage}
	</select>
	
	<select id="getPropertyListByAgent" parameterType="java.util.Map" resultType="PropertyVO">
		SELECT *
		FROM property
		WHERE property_user = #{property_user}
		AND property_status = 'open'
		ORDER BY #{orderBy}
		LIMIT #{startRow}, #{propertyPerPage}
	</select>
	
	<select id="getSimilarPropertyList" parameterType="java.util.Map" resultType="PropertyVO">
		SELECT *
		FROM property
		WHERE property_status = 'open'
		<choose>
			<when test="property_category != null and property_category != ''">
				AND property_category = #{property_category}
			</when>
			<when test="property_type != null and property_type != ''">
				AND property_type = #{property_type}
			</when>
			<when test="property_city != null and property_city != ''">
				AND property_city = #{property_city}
			</when>			
		</choose>	
		ORDER BY property_read_count DESC
		LIMIT 0, #{showAmount}
	</select>	

	<select id="getPropertyListBySearch" parameterType="SearchVO" resultType="PropertyVO">
		SELECT *
		FROM property
		WHERE property_status = 'open'
		<if test="search_category != null and search_category != ''">
			AND property_category = #{search_category}
		</if>
		<if test="search_type != null and search_type != ''">
			AND property_type = #{search_type}
		</if>
		<if test="search_city != null and search_city != ''">
			AND property_city = #{search_city}
		</if>
		<if test="search_gu != null and search_gu != ''">
			AND property_gu = #{search_gu}
		</if>
		<choose>
			<when test="(search_min_price == null or search_min_price == '') and (search_max_price != null or search_max_price != '')">
				AND property_price BETWEEN 0 AND #{search_max_price}
			</when>
			<when test="(search_min_price != null or search_min_price != '') and (search_max_price == null or search_max_price == '')">
				AND property_price >= #{search_min_price}
			</when>
			<when test="(search_min_price != null or search_min_price != '') and (search_max_price != null or search_max_price != '')">
				AND property_price BETWEEN #{search_min_price} AND #{search_max_price}
			</when>			
		</choose>
		<choose>
			<when test="(search_min_deposit == null or search_min_deposit == '') and (search_max_deposit != null or search_max_deposit != '')">
				AND property_deposit BETWEEN 0 AND #{search_max_deposit}
			</when>
			<when test="(search_min_deposit != null or search_min_deposit != '') and (search_max_deposit == null or search_max_deposit == '')">
				AND property_deposit >= #{search_min_deposit}
			</when>
			<when test="(search_min_deposit != null or search_min_deposit != '') and (search_max_deposit != null or search_max_deposit != '')">
				AND property_deposit BETWEEN #{search_min_deposit} AND #{search_max_deposit}
			</when>			
		</choose>
		<choose>
			<when test="search_min_size == null or search_min_size == '') and search_max_size != null or search_max_size != '')">
				AND property_size BETWEEN 0 AND #{search_max_size}
			</when>
			<when test="search_min_size != null or search_min_size != '') and search_max_size == null or search_max_size == '')">
				AND property_size >= #{search_min_size}
			</when>
			<when test="search_min_size != null or search_min_size != '') and search_max_size != null or search_max_size != '')">
				AND property_size BETWEEN #{search_min_size} AND #{search_max_size}
			</when>			
		</choose>
		<choose>
			<when test="search_min_bedroom == null or search_min_bedroom == '') and search_max_bedroom != null or search_max_bedroom != '')">
				AND property_bedroom BETWEEN 0 AND #{search_max_bedroom}
			</when>
			<when test="search_min_bedroom != null or search_min_bedroom != '') and search_max_bedroom == null or search_max_bedroom == '')">
				AND property_bedroom >= #{search_min_bedroom}
			</when>
			<when test="search_min_bedroom != null or search_min_bedroom != '') and search_max_bedroom != null or search_max_bedroom != '')">
				AND property_bedroom BETWEEN #{search_min_bedroom} AND #{search_max_bedroom}
			</when>			
		</choose>		
		AND property_option = #{search_option}
		ORDER BY #{search_order_by}
		LIMIT #{search_startRow}, #{search_propertyPerPage}		
	</select>
	
	<select id="getPropertyListByCondition" parameterType="java.util.Map" resultType="PropertyVO">
		SELECT *
		FROM property
		WHERE property_status = 'open'
		<if test="login == true">
			AND property_category = #{property_category}
			AND property_type = #{property_type}
			AND property_city = #{property_city}
		</if>
		AND #{key} = #{value}
		ORDER BY #{orderBy}
		LIMIT #{startRow}, #{propertyPerPage}		
	</select>
		
	<select id="getPropertyListByUser" parameterType="String" resultType="PropertyVO">
		SELECT *
		FROM property
		WHERE property_status = 'open'
		AND property_user = #{user_email}
		ORDER BY property_date DESC
	</select>
		
	<select id="getPropertyListByLove" parameterType="String" resultType="PropertyVO">
		SELECT distinct property.*
		FROM property
		JOIN love
		ON property_id = love_property
		JOIN user
		ON love_user = #{user_email}
		AND property_status = 'open'
		ORDER BY love_id DESC
	</select>
	
	<select id="getPropertySoldCount" parameterType="String">
		SELECT count(*)
		FROM property
		WHERE property_user = #{user_email}
		AND property_status = 'sold'
	</select>
	
	<select id="getCityList" resultType="String">
		SELECT property_city
		FROM property
		GROUP BY property_city 
	</select>

	<select id="getGuList" parameterType="String" resultType="String">
		SELECT property_gu
		FROM property
		WHERE property_city = #{property_city}
		GROUP BY property_gu
	</select>
	
</mapper>